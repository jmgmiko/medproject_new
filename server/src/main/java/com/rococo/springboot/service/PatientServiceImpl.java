package com.rococo.springboot.service;

import com.rococo.springboot.model.MedicalRecordModel;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.rococo.springboot.model.PatientModel;
import com.rococo.springboot.repository.MedicalRecordRepository;
import com.rococo.springboot.repository.PatientRepository;
import java.util.Optional;

@Service
public class PatientServiceImpl implements PatientService {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private PatientRepository patientRepository;

        @Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private MedicalRecordRepository medRecordRepository;
        
        @Override
	public PatientModel getPatientInfo(int given) {
		return patientRepository.findById(given).get();
	}

	@Override
	public List<PatientModel> getAll() {
		List<PatientModel> list = new ArrayList<>();
		patientRepository.findAll().iterator().forEachRemaining(list::add);
		return list;
	}
        
        public String removePatientById(PatientModel given) {
            List<MedicalRecordModel> all = medRecordRepository.findAll();
            boolean result = false;
            for (MedicalRecordModel spot: all) {
                if (spot.getPatient().equals(given)) {
                    result = true;
                    break;
                }
            }
            if (result == false) {
                patientRepository.deleteById(given.getId());
                return "Deleted";
            } else {
                return "Not deleted";
            }
            
        }

	/* (non-Javadoc)
	 * @see com.rococo.springboot.service.PersonService#registerPerson(com.rococo.springboot.model.PatientModel)
	 */
	@Override
	public void registerPatient(PatientModel patientModel) {
		patientRepository.save(patientModel);
	}

}
