package com.rococo.springboot.service;

import java.util.ArrayList;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.rococo.springboot.model.User;
import com.rococo.springboot.model.UserAbility;
import com.rococo.springboot.repository.UserAbilityRepository;
import com.rococo.springboot.repository.UserRepository;
import java.util.Optional;

@Service
public class UserServiceImpl implements UserService {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired
	private  UserAbilityRepository userAbilityRepository;
	
	@Override
	public User getPersonInfo(User UserModel) {
		return userRepository.findById(UserModel.getId()).get();
        }

	@Override
	@Transactional(rollbackOn = Exception.class)
	public User getPersonByUsernamePassword(String username,String password){
		User user =  userRepository.findUserByUsernamePassword(username,password);
		return user;
	}
        
        public String getUserRole(User given) {
            return userAbilityRepository.findUserAbility(given);
        }
        
	@Override
	public List<User> getAll() {
		List<User> list = new ArrayList<>();
		userRepository.findAll().iterator().forEachRemaining(list::add);
		return list;
	}
        
	/* (non-Javadoc)
	 * @see com.rococo.springboot.service.UserService#registerPerson(com.rococo.springboot.model.User)
	 */
	@Override
	public void registerPerson(User UserModel) {
		userRepository.save(UserModel);
                userAbilityRepository.save(new UserAbility(UserModel, "doctor"));
	}
        
        public User findById(Integer given) {
            return userRepository.findUserById(given);
        }

}
